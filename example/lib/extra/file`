 Container(
            padding: EdgeInsets.all(50),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: <Widget>[
                Expanded(
                  child: Text(
                    'Register',
                    style: TextStyle(
                      fontFamily: 'Kaushan',
                      fontSize: 40,
                    ),
                    textAlign: TextAlign.start,
                  ),
                ),
                SizedBox(
                  height: 20,
                ),
                SingleChildScrollView(
                  child: Container(
                    width: 500,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: <Widget>[
                        RegField(
                          label: 'Name',
                          icon: Icon(Icons.person, color: Colors.red),
                        ),
                        RegField(
                          label: 'Email',
                          icon: Icon(
                            Icons.email,
                            color: Colors.red,
                          ),
                        ),
                        RegField(
                          label: 'Password',
                          icon: Icon(Icons.lock, color: Colors.red),
                        ),
                        RegField(
                          icon: Icon(Icons.lock, color: Colors.red),
                          label: 'Confirm Password',
                        ),
                        RegField(
                          icon: Icon(
                            Icons.phone,
                            color: Colors.red,
                          ),
                          label: 'Phone',
                          onChanged: (val) {},
                        ),
                        RegField(
                          icon: Icon(
                            Icons.location_city,
                            color: Colors.red,
                          ),
                          label: 'Address',
                          onChanged: (val) {},
                        ),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          children: <Widget>[
                            FutureBuilder(
                              future: Database.readCity(_details['Country']),
                              builder: (context, snap) {
                                if (snap.connectionState ==
                                        ConnectionState.done &&
                                    snap.hasData) {
                                  mysql.Results res = snap.data;

                                  return Center(
                                    child: DropdownButton(
                                      underline: Container(),
                                      onChanged: (val) {
                                        setState(() {
                                          print(val);
                                          Database.cityID = val;
                                          _details['City'] = val;
                                        });
                                      },
                                      value: Database.cityID,
                                      items: res.map((f) {
                                        print('ID:  ${f[0]} City: ${f[1]} ');
                                        return DropdownMenuItem(
                                          value: f[0].toString(),
                                          child: Text(f[1].toString()),
                                        );
                                      }).toList(),
                                    ),
                                  );
                                } else
                                  return SizedBox(
                                      height: 50,
                                      width: 50,
                                      child: CircularProgressIndicator());
                              },
                            ),
                            FutureBuilder(
                              future: Database.readCountries(),
                              builder: (context, snap) {
                                if (snap.connectionState ==
                                        ConnectionState.done &&
                                    snap.hasData) {
                                  mysql.Results res = snap.data;
                                  return Center(
                                    child: DropdownButton(
                                      isExpanded: false,
                                      underline: Container(),
                                      onChanged: (val) {
                                        setState(() {
                                          _details['Country'] = val;
                                          print('Country: $val');
                                        });
                                      },
                                      value: _details['Country'],
                                      items: res.map((f) {
                                        return DropdownMenuItem(
                                            value: f[0].toString(),
                                            child: Text(
                                              f[1].toString(),
                                            ));
                                      }).toList(),
                                    ),
                                  );
                                } else
                                  return CircularProgressIndicator();
                              },
                            ),
                          ],
                        )
                      ],
                    ),
                  ),
                ),
                Center(
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      FlatButton(
                        onPressed: () {},
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(20)),
                        color: Colors.red,
                        child: Text(
                          'Register',
                          style: TextStyle(fontFamily: 'Kaushan'),
                        ),
                      ),
                      SizedBox(
                        width: 30,
                      ),
                      FlatButton(
                        onPressed: () {},
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(20),
                            side: BorderSide(color: Colors.white)),
                        child: Text('Cancel',
                            style: TextStyle(fontFamily: 'Kaushan')),
                      )
                    ],
                  ),
                )
              ],
            ),
          )